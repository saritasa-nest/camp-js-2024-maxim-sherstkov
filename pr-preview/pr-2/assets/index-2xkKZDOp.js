var h=Object.defineProperty;var y=(t,e,s)=>e in t?h(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var r=(t,e,s)=>y(t,typeof e!="symbol"?e+"":e,s);import"./modulepreload-polyfill-B5Qt9EMX.js";function d(t){const e=new Uint32Array(1),n=crypto.getRandomValues(e)[0]/4294967296;return Math.floor(n*t+1)}function a(t){return t.reduce((e,s)=>e+s,0)}class p{constructor(e){r(this,"playerElement");this.playerElement=e}update(e){const s=a(e);this.playerElement.innerHTML=`${e.join(", ")} (Total: ${s})`}}class b{constructor(e){r(this,"playerElement");this.playerElement=e}update(e){e&&this.playerElement.classList.add("winner")}}class m{constructor(e){r(this,"historyElement");this.historyElement=e}update(e){const s=this.historyElement.innerHTML;this.historyElement.innerHTML=s?`${s}, ${e}`:`${e}`}}class i{constructor(){r(this,"subscribers",[])}subscribe(e){this.getSubscriberIndex(e)===-1&&this.subscribers.push(e)}unsubscribe(e){const s=this.getSubscriberIndex(e);s!==-1&&this.subscribers.splice(s,1)}notify(e){this.subscribers.forEach(s=>s.update(e))}getSubscriberIndex(e){return this.subscribers.findIndex(s=>s===e)}}class E extends i{constructor(s){super();r(this,"playersCount");r(this,"currentPlayerIndex",0);this.playersCount=s}next(){const s=this.currentPlayerIndex;this.currentPlayerIndex=(this.currentPlayerIndex+1)%this.playersCount,this.notify(s)}}class ${constructor(){r(this,"diceResults",[]);r(this,"results$",new i);r(this,"winStatus$",new i)}addDiceResult(e){this.diceResults.push(e),this.results$.notify(this.diceResults)}getTotalScore(){return a(this.diceResults)}update(e){this.addDiceResult(e)}}class f extends i{constructor(s){super();r(this,"sidesCount");this.sidesCount=s}roll(){const s=d(this.sidesCount);return this.notify(s),s}}class w{constructor(e){r(this,"players");r(this,"turnGenerator$");r(this,"diceGenerator$");r(this,"historyPublisher$");r(this,"historyDisplayer");r(this,"isGameEnded",!1);this.players=new Array(e.playersCount).fill(null).map(()=>new $),this.turnGenerator$=new E(e.playersCount),this.diceGenerator$=new f(e.diceSidesCount),this.historyPublisher$=new i,this.historyDisplayer=new m(e.historyElement),this.players.forEach((s,n)=>{const l=new p(e.playerElements[n]),o=new b(e.playerElements[n]);s.results$.subscribe(l),s.winStatus$.subscribe(o)}),this.turnGenerator$.subscribe({update:s=>{if(this.isGameEnded)return;const n=this.players[s];this.players.forEach(o=>this.diceGenerator$.unsubscribe(o)),this.diceGenerator$.subscribe(n);const l=this.diceGenerator$.roll();this.historyPublisher$.notify(l),this.checkWinStatus(n)}}),this.historyPublisher$.subscribe(this.historyDisplayer)}playTurn(){this.turnGenerator$.next()}checkWinStatus(e){e.getTotalScore()>=21&&(this.isGameEnded=!0,e.winStatus$.notify(!0),this.players.forEach(n=>this.diceGenerator$.unsubscribe(n)))}}const C=document.querySelectorAll(".player-result"),c=Array.from(C),G=c.length,x=document.getElementsByClassName("history-rolls")[0],I=6,S={playersCount:G,diceSidesCount:I,playerElements:c,historyElement:x},g=new w(S);var u;(u=document.getElementById("roll-dice"))==null||u.addEventListener("click",()=>{g.playTurn()});
